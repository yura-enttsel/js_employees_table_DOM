{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableBody","tableHeader","sortTable","index","order","Array","from","rows","sort","a","b","valueA","cells","innerText","valueB","valueToSortA","toFormat","valueToSortB","isValueType","localeCompare","forEach","row","append","text","result","parseFloat","replace","isNaN","addEventListener","e","item","target","indexToSort","cellIndex","toggleAttribute","hasAttribute","classList","remove","parentElement","add","form","createElement","officeOptions","toCurrencyFormat","number","parseInt","toLocaleString","style","currency","validateForm","validName","name","validAge","age","length","pushNotification","posTop","posRight","title","description","type","notification","top","right","dataset","qa","innerHTML","body","setTimeout","saveChanges","cell","input","startValue","getAttribute","currentValue","value","map","office","join","preventDefault","dataOfForm","FormData","dataOfFormObject","Object","fromEntries","entries","formValuesArr","newEmployee","insertRow","key","insertCell","reset","selectedCell","closest","initValue","querySelectorAll","option","setAttribute","inputField","firstElementChild","focus","ev"],"mappings":";AAAA,aAkTC,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAhTD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAYH,EAAME,cAAc,SAChCE,EAAcJ,EAAME,cAAc,SAexC,SAASG,EAAUC,EAAOC,GACxBC,MAAMC,KAAKN,EAAUO,MAClBC,KAAK,SAACC,EAAGC,GACFC,IAAAA,EAASF,EAAEG,MAAMT,GAAOU,UACxBC,EAASJ,EAAEE,MAAMT,GAAOU,UACxBE,EAAeC,EAASL,GACxBM,EAAeD,EAASF,GACxBI,EAAsC,iBAAjBH,EAEvBX,OAAAA,EACMc,EACJH,EAAaI,cAAcF,GAC3BF,EAAeE,EAGbC,EACJD,EAAaE,cAAcJ,GAC3BE,EAAeF,IAEpBK,QAAQ,SAAAC,GAAOrB,OAAAA,EAAUsB,OAAOD,KAGrC,SAASL,EAASO,GACVC,IAAAA,EAASC,WAAWF,EAAKG,QAAQ,QAAS,KAEzCC,OAAAA,MAAMH,GAAUD,EAAOC,EApChCvB,EAAY2B,iBAAiB,QAAS,SAAAC,GAC9BC,IAAAA,EAAOD,EAAEE,OACTC,EAAcF,EAAKG,UAEzBH,EAAKI,gBAAgB,YAIrBhC,EAAU8B,EAFOF,EAAKK,aAAa,eAmCrCnC,EAAU4B,iBAAiB,QAAS,SAAAC,GAClCxB,MAAMC,KAAKN,EAAUO,MAAMa,QAAQ,SAAAC,GAAOA,OAAAA,EAAIe,UAAUC,OAAO,YAC/DR,EAAEE,OAAOO,cAAcF,UAAUG,IAAI,YAMvC,IAAMC,EAAO1C,SAAS2C,cAAc,QAC9BC,EAAgB,CACpB,QAAS,YAAa,SAAU,WAAY,YAAa,iBA4E3D,SAASC,EAAiBC,GACjBC,OAAAA,SAASD,GACbE,eAAe,QAAS,CACvBC,MAAO,WAAYC,SAAU,QAC5BtB,QAAQ,MAAO,IAGtB,SAASuB,EAAiD,GAA5BC,IAAAA,EAANC,EAAAA,KAAsBC,EAALC,EAAAA,IACnCH,OAAAA,EAAUI,OAAS,GACrBC,EACE,EAAG,EAAG,qBACN,gDAAiD,UAG5C,KAGLH,EAAW,IAAMA,EAAW,MAC9BG,EACE,EAAG,EAAG,mBACN,wDAAyD,UAGpD,GAMX,SAASA,EAAiBC,EAAQC,EAAUC,EAAOC,EAAaC,GACxDC,IAAAA,EAAe/D,SAAS2C,cAAc,OAE5CoB,EAAazB,UAAUG,IAAI,eAAgBqB,GAC3CC,EAAad,MAAMe,IAASN,GAAAA,OAAAA,EAA5B,MACAK,EAAad,MAAMgB,MAAWN,GAAAA,OAAAA,EAA9B,MACAI,EAAaG,QAAQC,GAAK,eAE1BJ,EAAaK,UACSR,2BAAAA,OAAAA,EACfC,kBAAAA,OAAAA,EAFP,YAKA7D,SAASqE,KAAK7C,OAAOuC,GAErBO,WAAW,WAAMP,OAAAA,EAAaxB,UAAU,KA+E1C,SAASgC,EAAYC,EAAMC,EAAOpE,GAC1BqE,IAAAA,EAAaD,EAAME,aAAa,SAChCC,EAAeH,EAAMI,MAInBxE,OAFRmE,EAAKJ,UAAY,GAET/D,GACD,KAAA,EACCuE,EAAapB,QAAU,EACzBgB,EAAKzD,UAAY6D,GAEjBnB,EACE,EAAG,EAAG,qBACN,gDAAiD,SAEnDe,EAAKzD,UAAY2D,GAEnB,MAEG,KAAA,EACCE,EAAe,IAAMA,EAAe,IACtCnB,EACE,EAAG,EAAG,mBACN,wDAAyD,SAE3De,EAAKzD,UAAY2D,GAEjBF,EAAKzD,UAAY6D,EAEnB,MAEF,QACMA,EAAapB,OAAS,EACxBgB,EAAKzD,UAAuB,IAAVV,EACduE,EACA/B,EAAiB+B,IAErBnB,EACE,EAAG,EAAG,aACN,kCAAmC,SAGrCe,EAAKzD,UAAuB,IAAVV,EACdqE,EACA7B,EAAiB6B,KAhP7BhC,EAAKJ,UAAUG,IAAI,qBAEnBC,EAAK0B,UAqBGxB,6aAAAA,OAAAA,EAAckC,IAAI,SAAAC,GACRA,MAAAA,qBAAAA,OAAAA,EADc,uBAEvBC,KAAK,IAvBd,8UA4CAhF,SAASqE,KAAK7C,OAAOkB,GAErBA,EAAKZ,iBAAiB,SAAU,SAAAC,GAC9BA,EAAEkD,iBAEIC,IAAAA,EAAa,IAAIC,SAASzC,GAC1B0C,EAAmBC,OAAOC,YAAYJ,EAAWK,WAEnDpC,GAAAA,EAAaiC,GAAmB,CAC5BI,IAAAA,EAAgBH,OAAOE,QAAQH,GAC/BK,EAAcvF,EAAUwF,WAAW,GAEzCF,EAAclE,QAAQ,SAAkB,GAAA,IAAA,EAAA,EAAA,EAAA,GAAhBqE,EAAgB,EAAA,GAAXd,EAAW,EAAA,GAChBY,EAAYG,aAEpB7E,UAAqB,WAAR4E,EACvBd,EACAhC,EAAiBgC,KAGvBnC,EAAKmD,QAELpC,EAAiB,EAAG,EAAG,mBACrB,+BAAgC,cAqDtCvD,EAAU4B,iBAAiB,WAAY,SAAAC,GAC/B+D,IAAAA,EAAe/D,EAAEE,OAAO8D,QAAQ,MAChCC,EAAYF,EAAa/E,UACzBV,EAAQyF,EAAa3D,UAInB9B,OAFRyF,EAAa/E,UAAY,GAEjBV,GACD,KAAA,EACHyF,EAAa1B,UACyB4B,+CAAAA,OAAAA,EAChCpD,kBAAAA,OAAAA,EAAckC,IAAI,SAAAC,GACDA,MAAAA,gCAAAA,OAAAA,EAAWA,MAAAA,OAAAA,EADJ,2BAEvBC,KAAK,IAJZ,+BAQAc,EAAaG,iBAAiB,UAC3B3E,QAAQ,SAAA4E,GACHA,EAAOnF,YAAciF,GACvBE,EAAOC,aAAa,WAAY,cAGtC,MAEG,KAAA,EACHL,EAAa1B,UAIA4B,6FAAAA,OAAAA,EAJb,gEASA,MAEG,KAAA,EACHF,EAAa1B,UAIAlD,6FAAAA,OAAAA,EAAS8E,GAJtB,wBAOA,MAEF,QACEF,EAAa1B,UAMA4B,mKAAAA,OAAAA,EANb,wBAYEI,IAAAA,EAAaN,EAAaO,kBAEhCD,EAAWE,QAEXF,EAAWtE,iBAAiB,OAAQ,WAClCyC,OAAAA,EAAYuB,EAAcM,EAAY/F,KAExC+F,EAAWtE,iBAAiB,WAAY,SAAAyE,GACvB,UAAXA,EAAGZ,KACLpB,EAAYuB,EAAcM,EAAY/F","file":"main.a6bd3c5a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableBody = table.querySelector('tbody');\nconst tableHeader = table.querySelector('thead');\n\n// Implementation of table sorting by clicking on the title (in two directions)\n\ntableHeader.addEventListener('click', e => {\n  const item = e.target;\n  const indexToSort = item.cellIndex;\n\n  item.toggleAttribute('selected');\n\n  const orderASC = item.hasAttribute('selected');\n\n  sortTable(indexToSort, orderASC);\n});\n\nfunction sortTable(index, order) {\n  Array.from(tableBody.rows)\n    .sort((a, b) => {\n      const valueA = a.cells[index].innerText;\n      const valueB = b.cells[index].innerText;\n      const valueToSortA = toFormat(valueA);\n      const valueToSortB = toFormat(valueB);\n      const isValueType = typeof valueToSortA === 'string';\n\n      if (order) {\n        return (isValueType)\n          ? valueToSortA.localeCompare(valueToSortB)\n          : valueToSortA - valueToSortB;\n      }\n\n      return (isValueType)\n        ? valueToSortB.localeCompare(valueToSortA)\n        : valueToSortB - valueToSortA;\n    })\n    .forEach(row => tableBody.append(row));\n}\n\nfunction toFormat(text) {\n  const result = parseFloat(text.replace(/[$,]/g, ''));\n\n  return isNaN(result) ? text : result;\n}\n\n// Implementation of selection a row onclick\n\ntableBody.addEventListener('click', e => {\n  Array.from(tableBody.rows).forEach(row => row.classList.remove('active'));\n  e.target.parentElement.classList.add('active');\n});\n\n// Script to add a form to the document.\n// Form allows users to add new employees to the spreadsheet\n\nconst form = document.createElement('form');\nconst officeOptions = [\n  'Tokyo', 'Singapore', 'London', 'New York', 'Edinburgh', 'San Francisco',\n];\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `\n  <label>Name:\n    <input\n      type=\"text\"\n      name=\"name\"\n      data-qa=\"name\"\n      pattern=\"[a-zA-Z0-9]+[a-zA-Z0-9 ]+\"\n      required\n    >\n  </label>\n  <label>Position:\n    <input\n      name=\"position\"\n      type=\"text\"\n      data-qa=\"position\"\n      pattern=\"[a-zA-Z0-9]+[a-zA-Z0-9 ]+\"\n      required\n    >\n  </label>\n  <label>Office:\n    <select name = \"office\" data-qa=\"office\" required>\n      ${officeOptions.map(office => `\n        <option>${office}</option>\n      `).join('')}\n    </select>\n  </label>\n  <label>Age:\n    <input\n      name=\"age\"\n      type=\"number\"\n      data-qa=\"age\"\n      required\n    >\n  </label>\n  <label>Salary:\n    <input\n      name=\"salary\"\n      type=\"number\"\n      data-qa=\"salary\"\n      required\n    >\n  </label>\n  <button type=\"submit\">Save to table</button>\n`;\ndocument.body.append(form);\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const dataOfForm = new FormData(form);\n  const dataOfFormObject = Object.fromEntries(dataOfForm.entries());\n\n  if (validateForm(dataOfFormObject)) {\n    const formValuesArr = Object.entries(dataOfFormObject);\n    const newEmployee = tableBody.insertRow(-1);\n\n    formValuesArr.forEach(([key, value]) => {\n      const employeeField = newEmployee.insertCell();\n\n      employeeField.innerText = (key !== 'salary')\n        ? value\n        : toCurrencyFormat(value);\n    });\n\n    form.reset();\n\n    pushNotification(0, 0, 'Congratulations!',\n      'Employee added to the table.', 'success');\n  }\n});\n\nfunction toCurrencyFormat(number) {\n  return parseInt(number)\n    .toLocaleString('en-US', {\n      style: 'currency', currency: 'USD',\n    }).replace('.00', '');\n}\n\nfunction validateForm({ name: validName, age: validAge }) {\n  if (validName.length < 4) {\n    pushNotification(\n      0, 0, 'Enter correct name',\n      'The name should be at least 4 characters long', 'error'\n    );\n\n    return false;\n  }\n\n  if (validAge < 18 || validAge > 90) {\n    pushNotification(\n      0, 0, 'Age restrictions',\n      'You must be at least 18 and no more than 90 years old', 'error'\n    );\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n  notification.dataset.qa = 'notification';\n\n  notification.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  document.body.append(notification);\n\n  setTimeout(() => notification.remove(), 4000);\n};\n\n// Implementation of editing of table cells by double-clicking on it\n\ntableBody.addEventListener('dblclick', e => {\n  const selectedCell = e.target.closest('td');\n  const initValue = selectedCell.innerText;\n  const index = selectedCell.cellIndex;\n\n  selectedCell.innerText = '';\n\n  switch (index) {\n    case 2:\n      selectedCell.innerHTML = `\n        <select class=\"cell-input\" value=\"${initValue}\">\n          ${officeOptions.map(office => `\n            <option value=\"${office}\">${office}</option>\n          `).join('')}\n        </select>\n      `;\n\n      selectedCell.querySelectorAll('option')\n        .forEach(option => {\n          if (option.innerText === initValue) {\n            option.setAttribute('selected', 'selected');\n          }\n        });\n      break;\n\n    case 3:\n      selectedCell.innerHTML = `\n        <input\n          class=\"cell-input\"\n          type=\"number\"\n          value=\"${initValue}\"\n          min=\"18\"\n          max=\"90\"\n        >\n      `;\n      break;\n\n    case 4:\n      selectedCell.innerHTML = `\n        <input\n          class=\"cell-input\"\n          type=\"number\"\n          value=\"${toFormat(initValue)}\"\n        >\n      `;\n      break;\n\n    default:\n      selectedCell.innerHTML = `\n        <input\n          class=\"cell-input\"\n          type=\"text\"\n          minlength=\"4\"\n          pattern=\"[a-zA-Z0-9]+[a-zA-Z0-9 ]+\"\n          value=\"${initValue}\"\n        >\n      `;\n      break;\n  }\n\n  const inputField = selectedCell.firstElementChild;\n\n  inputField.focus();\n\n  inputField.addEventListener('blur', () =>\n    saveChanges(selectedCell, inputField, index));\n\n  inputField.addEventListener('keypress', ev => {\n    if (ev.key === 'Enter') {\n      saveChanges(selectedCell, inputField, index);\n    }\n  });\n});\n\nfunction saveChanges(cell, input, index) {\n  const startValue = input.getAttribute('value');\n  const currentValue = input.value;\n\n  cell.innerHTML = '';\n\n  switch (index) {\n    case 0:\n      if (currentValue.length >= 4) {\n        cell.innerText = currentValue;\n      } else {\n        pushNotification(\n          0, 0, 'Enter correct name',\n          'The name should be at least 4 characters long', 'error'\n        );\n        cell.innerText = startValue;\n      }\n      break;\n\n    case 3:\n      if (currentValue < 18 || currentValue > 90) {\n        pushNotification(\n          0, 0, 'Age restrictions',\n          'You must be at least 18 and no more than 90 years old', 'error'\n        );\n        cell.innerText = startValue;\n      } else {\n        cell.innerText = currentValue;\n      }\n      break;\n\n    default:\n      if (currentValue.length > 0) {\n        cell.innerText = (index !== 4)\n          ? currentValue\n          : toCurrencyFormat(currentValue);\n      } else {\n        pushNotification(\n          0, 0, 'Empty line',\n          'You cannot save an empty string', 'error'\n        );\n\n        cell.innerText = (index !== 4)\n          ? startValue\n          : toCurrencyFormat(startValue);\n      }\n      break;\n  };\n};\n"]}